
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CE82EB92B5237474A8D38A404F3AAFCE'
    
_lr_action_items = {'LPAR':([78,118,],[104,124,]),'DOUBLE':([52,54,55,61,],[-4,-2,-3,95,]),'OPTION':([1,3,6,7,10,13,15,17,18,19,21,22,23,26,27,38,39,65,67,69,72,75,77,80,100,102,103,113,],[-1,-78,11,-79,11,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,-65,11,11,-40,-41,-39,-71,-63,-49,-42,-45,-58,-38,]),'EXTEND':([1,3,6,7,10,13,15,17,18,19,21,22,23,26,27,37,38,40,51,53,57,58,59,60,62,63,74,75,77,79,80,102,103,115,125,],[-1,-78,14,-79,14,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,14,-65,14,14,-56,-55,-52,-53,-50,-51,-54,14,-71,-63,-57,-49,-45,-58,-48,-37,]),'FIXED32':([52,54,55,61,],[-4,-2,-3,82,]),'RPAR':([108,128,],[114,130,]),'REPEATED':([37,40,51,53,57,58,59,60,62,63,74,79,80,102,103,115,125,],[52,52,52,-56,-55,-52,-53,-50,-51,-54,52,-57,-49,-45,-58,-48,-37,]),'TRUE':([35,129,],[42,134,]),'DOT':([8,9,34,83,],[25,-30,-31,25,]),'STRING':([52,54,55,61,],[-4,-2,-3,89,]),'INT32':([52,54,55,61,],[-4,-2,-3,90,]),'SERVICE':([1,3,6,7,10,13,15,17,18,19,21,22,23,26,27,38,75,77,80,102,103,],[-1,-78,12,-79,12,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,-65,-71,-63,-49,-45,-58,]),'SEMI':([8,9,31,34,41,42,43,44,45,46,107,109,110,111,116,117,119,121,122,123,127,136,],[26,-30,38,-31,-68,-67,-69,-66,75,-70,113,-46,115,-47,-1,-20,125,-28,-26,-27,-29,-25,]),'OPTIONAL':([37,40,51,53,57,58,59,60,62,63,74,79,80,102,103,115,125,],[55,55,55,-56,-55,-52,-53,-50,-51,-54,55,-57,-49,-45,-58,-48,-37,]),'REQUIRED':([37,40,51,53,57,58,59,60,62,63,74,79,80,102,103,115,125,],[54,54,54,-56,-55,-52,-53,-50,-51,-54,54,-57,-49,-45,-58,-48,-37,]),'TO':([81,],[105,]),'RPC':([36,47,49,50,76,130,],[48,48,-61,-60,-62,-59,]),'NUM':([35,56,101,105,112,129,],[44,81,107,111,117,135,]),'EXTENSIONS':([37,40,51,53,57,58,59,60,62,63,74,79,80,102,103,115,125,],[56,56,56,-56,-55,-52,-53,-50,-51,-54,56,-57,-49,-45,-58,-48,-37,]),'FIXED64':([52,54,55,61,],[-4,-2,-3,86,]),'IMPORT':([1,3,6,7,10,13,15,17,18,19,21,22,23,26,27,38,75,77,80,102,103,],[-1,-78,16,-79,16,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,-65,-71,-63,-49,-45,-58,]),'SFIXED64':([52,54,55,61,],[-4,-2,-3,87,]),'$end':([1,2,3,5,6,7,10,13,15,17,18,19,21,22,23,26,27,38,75,77,80,102,103,],[-1,0,-78,-84,-1,-79,-83,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,-65,-71,-63,-49,-45,-58,]),'RBRACK':([131,132,133,134,135,],[136,-23,-24,-22,-21,]),'RBRACE':([36,37,39,40,47,49,50,51,53,57,58,59,60,62,63,65,67,69,70,72,73,74,75,76,79,80,100,102,103,113,115,125,130,],[-1,-1,-1,-1,77,-61,-60,80,-56,-55,-52,-53,-50,-51,-54,-44,-40,-41,102,-39,-43,103,-71,-62,-57,-49,-42,-45,-58,-38,-48,-37,-59,]),'PACKAGE':([1,],[4,]),'ENUM':([1,3,6,7,10,13,15,17,18,19,21,22,23,26,27,37,38,40,51,53,57,58,59,60,62,63,74,75,77,79,80,102,103,115,125,],[-1,-78,20,-79,20,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,20,-65,20,20,-56,-55,-52,-53,-50,-51,-54,20,-71,-63,-57,-49,-45,-58,-48,-37,]),'BYTES':([52,54,55,61,],[-4,-2,-3,91,]),'RETURNS':([114,],[118,]),'INT64':([52,54,55,61,],[-4,-2,-3,92,]),'EQ':([28,64,66,68,71,106,126,],[35,-32,101,-34,-33,112,129,]),'STRING_LITERAL':([16,35,],[31,43,]),'UINT64':([52,54,55,61,],[-4,-2,-3,93,]),'LBRACE':([29,30,32,33,],[36,37,39,40,]),'FALSE':([35,129,],[41,132,]),'NAME':([4,9,11,12,14,20,24,25,34,35,39,48,52,54,55,61,65,67,69,72,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,104,113,120,124,129,],[9,-30,28,29,30,32,33,34,-31,46,64,78,-4,-2,-3,9,64,-40,-41,-39,-71,-13,-36,64,-35,-14,-16,-11,-18,-7,-19,-8,-10,-12,-5,-6,-9,-15,-17,-42,108,-38,126,128,133,]),'SINT64':([52,54,55,61,],[-4,-2,-3,94,]),'STARTTOKEN':([0,],[1,]),'FLOAT':([52,54,55,61,],[-4,-2,-3,96,]),'LBRACK':([116,117,121,122,127,136,],[120,-20,-28,120,-29,-25,]),'UINT32':([52,54,55,61,],[-4,-2,-3,97,]),'SFIXED32':([52,54,55,61,],[-4,-2,-3,98,]),'BOOL':([52,54,55,61,],[-4,-2,-3,99,]),'MAX':([9,34,39,65,67,69,72,75,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,105,113,],[-30,-31,68,68,-40,-41,-39,-71,-13,-36,68,-35,-14,-16,-11,-18,-7,-19,-8,-10,-12,-5,-6,-9,-15,-17,-42,109,-38,]),'MESSAGE':([1,3,6,7,9,10,13,15,17,18,19,21,22,23,26,27,34,37,38,39,40,51,53,57,58,59,60,62,63,65,67,69,72,74,75,77,79,80,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,113,115,125,],[-1,-78,24,-79,-30,24,-75,-73,-82,-72,-76,-77,-74,-80,-64,-81,-31,24,-65,71,24,24,-56,-55,-52,-53,-50,-51,-54,71,-40,-41,-39,24,-71,-63,-57,-49,-13,-36,71,-35,-14,-16,-11,-18,-7,-19,-8,-10,-12,-5,-6,-9,-15,-17,-42,-45,-58,-38,-48,-37,]),'SINT32':([52,54,55,61,],[-4,-2,-3,88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'message_body':([37,40,],[51,74,]),'statements':([6,],[10,]),'field_directive_plus':([116,],[122,]),'field_directive_times':([116,],[119,]),'service_definition':([6,10,],[13,13,]),'enum_body_part':([39,65,],[69,100,]),'message_body_part':([37,40,51,74,],[53,53,79,79,]),'dotname':([4,61,],[8,83,]),'package_definition':([1,],[6,]),'field_type':([61,],[84,]),'goal':([0,],[2,]),'message_extension':([6,10,37,40,51,74,],[15,15,63,63,63,63,]),'method_definition_opt':([36,],[47,]),'enum_body':([39,],[65,]),'primitive_type':([61,],[85,]),'extensions_to':([105,],[110,]),'empty':([1,6,36,37,39,40,116,],[7,17,50,57,73,57,123,]),'message_definition':([6,10,37,40,51,74,],[18,18,58,58,58,58,]),'package_directive':([1,],[3,]),'import_directive':([6,10,],[19,19,]),'rvalue':([129,],[131,]),'field_id':([112,],[116,]),'option_directive':([6,10,39,65,],[21,21,67,67,]),'field_definition':([37,40,51,74,],[60,60,60,60,]),'method_definition':([36,47,],[49,76,]),'enum_body_opt':([39,],[70,]),'field_modifier':([37,40,51,74,],[61,61,61,61,]),'field_name':([39,65,84,],[66,66,106,]),'extensions_definition':([37,40,51,74,],[59,59,59,59,]),'protofile':([1,],[5,]),'enum_definition':([6,10,37,40,51,74,],[22,22,62,62,62,62,]),'topLevel':([6,10,],[23,27,]),'field_directive':([116,122,],[121,127,]),'option_rvalue':([35,],[45,]),'enum_field':([39,65,],[72,72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal","S'",1,None,None,None),
  ('empty -> <empty>','empty',0,'p_empty','plyproto_parser.py',118),
  ('field_modifier -> REQUIRED','field_modifier',1,'p_field_modifier','plyproto_parser.py',122),
  ('field_modifier -> OPTIONAL','field_modifier',1,'p_field_modifier','plyproto_parser.py',123),
  ('field_modifier -> REPEATED','field_modifier',1,'p_field_modifier','plyproto_parser.py',124),
  ('primitive_type -> DOUBLE','primitive_type',1,'p_primitive_type','plyproto_parser.py',128),
  ('primitive_type -> FLOAT','primitive_type',1,'p_primitive_type','plyproto_parser.py',129),
  ('primitive_type -> INT32','primitive_type',1,'p_primitive_type','plyproto_parser.py',130),
  ('primitive_type -> INT64','primitive_type',1,'p_primitive_type','plyproto_parser.py',131),
  ('primitive_type -> UINT32','primitive_type',1,'p_primitive_type','plyproto_parser.py',132),
  ('primitive_type -> UINT64','primitive_type',1,'p_primitive_type','plyproto_parser.py',133),
  ('primitive_type -> SINT32','primitive_type',1,'p_primitive_type','plyproto_parser.py',134),
  ('primitive_type -> SINT64','primitive_type',1,'p_primitive_type','plyproto_parser.py',135),
  ('primitive_type -> FIXED32','primitive_type',1,'p_primitive_type','plyproto_parser.py',136),
  ('primitive_type -> FIXED64','primitive_type',1,'p_primitive_type','plyproto_parser.py',137),
  ('primitive_type -> SFIXED32','primitive_type',1,'p_primitive_type','plyproto_parser.py',138),
  ('primitive_type -> SFIXED64','primitive_type',1,'p_primitive_type','plyproto_parser.py',139),
  ('primitive_type -> BOOL','primitive_type',1,'p_primitive_type','plyproto_parser.py',140),
  ('primitive_type -> STRING','primitive_type',1,'p_primitive_type','plyproto_parser.py',141),
  ('primitive_type -> BYTES','primitive_type',1,'p_primitive_type','plyproto_parser.py',142),
  ('field_id -> NUM','field_id',1,'p_field_id','plyproto_parser.py',146),
  ('rvalue -> NUM','rvalue',1,'p_rvalue','plyproto_parser.py',150),
  ('rvalue -> TRUE','rvalue',1,'p_rvalue','plyproto_parser.py',151),
  ('rvalue -> FALSE','rvalue',1,'p_rvalue','plyproto_parser.py',152),
  ('rvalue -> NAME','rvalue',1,'p_rvalue2','plyproto_parser.py',156),
  ('field_directive -> LBRACK NAME EQ rvalue RBRACK','field_directive',5,'p_field_directive','plyproto_parser.py',162),
  ('field_directive_times -> field_directive_plus','field_directive_times',1,'p_field_directive_times','plyproto_parser.py',167),
  ('field_directive_times -> empty','field_directive_times',1,'p_field_directive_times2','plyproto_parser.py',171),
  ('field_directive_plus -> field_directive','field_directive_plus',1,'p_field_directive_plus','plyproto_parser.py',175),
  ('field_directive_plus -> field_directive_plus field_directive','field_directive_plus',2,'p_field_directive_plus','plyproto_parser.py',176),
  ('dotname -> NAME','dotname',1,'p_dotname','plyproto_parser.py',183),
  ('dotname -> dotname DOT NAME','dotname',3,'p_dotname','plyproto_parser.py',184),
  ('field_name -> NAME','field_name',1,'p_fieldName','plyproto_parser.py',192),
  ('field_name -> MESSAGE','field_name',1,'p_fieldName','plyproto_parser.py',193),
  ('field_name -> MAX','field_name',1,'p_fieldName','plyproto_parser.py',194),
  ('field_type -> primitive_type','field_type',1,'p_field_type','plyproto_parser.py',200),
  ('field_type -> dotname','field_type',1,'p_field_type2','plyproto_parser.py',205),
  ('field_definition -> field_modifier field_type field_name EQ field_id field_directive_times SEMI','field_definition',7,'p_field_definition','plyproto_parser.py',212),
  ('enum_field -> field_name EQ NUM SEMI','enum_field',4,'p_enum_field','plyproto_parser.py',218),
  ('enum_body_part -> enum_field','enum_body_part',1,'p_enum_body_part','plyproto_parser.py',223),
  ('enum_body_part -> option_directive','enum_body_part',1,'p_enum_body_part','plyproto_parser.py',224),
  ('enum_body -> enum_body_part','enum_body',1,'p_enum_body','plyproto_parser.py',228),
  ('enum_body -> enum_body enum_body_part','enum_body',2,'p_enum_body','plyproto_parser.py',229),
  ('enum_body_opt -> empty','enum_body_opt',1,'p_enum_body_opt','plyproto_parser.py',236),
  ('enum_body_opt -> enum_body','enum_body_opt',1,'p_enum_body_opt2','plyproto_parser.py',240),
  ('enum_definition -> ENUM NAME LBRACE enum_body_opt RBRACE','enum_definition',5,'p_enum_definition','plyproto_parser.py',246),
  ('extensions_to -> MAX','extensions_to',1,'p_extensions_to','plyproto_parser.py',251),
  ('extensions_to -> NUM','extensions_to',1,'p_extensions_to2','plyproto_parser.py',256),
  ('extensions_definition -> EXTENSIONS NUM TO extensions_to SEMI','extensions_definition',5,'p_extensions_definition','plyproto_parser.py',261),
  ('message_extension -> EXTEND NAME LBRACE message_body RBRACE','message_extension',5,'p_message_extension','plyproto_parser.py',267),
  ('message_body_part -> field_definition','message_body_part',1,'p_message_body_part','plyproto_parser.py',272),
  ('message_body_part -> enum_definition','message_body_part',1,'p_message_body_part','plyproto_parser.py',273),
  ('message_body_part -> message_definition','message_body_part',1,'p_message_body_part','plyproto_parser.py',274),
  ('message_body_part -> extensions_definition','message_body_part',1,'p_message_body_part','plyproto_parser.py',275),
  ('message_body_part -> message_extension','message_body_part',1,'p_message_body_part','plyproto_parser.py',276),
  ('message_body -> empty','message_body',1,'p_message_body','plyproto_parser.py',281),
  ('message_body -> message_body_part','message_body',1,'p_message_body2','plyproto_parser.py',286),
  ('message_body -> message_body message_body_part','message_body',2,'p_message_body2','plyproto_parser.py',287),
  ('message_definition -> MESSAGE NAME LBRACE message_body RBRACE','message_definition',5,'p_message_definition','plyproto_parser.py',296),
  ('method_definition -> RPC NAME LPAR NAME RPAR RETURNS LPAR NAME RPAR','method_definition',9,'p_method_definition','plyproto_parser.py',302),
  ('method_definition_opt -> empty','method_definition_opt',1,'p_method_definition_opt','plyproto_parser.py',307),
  ('method_definition_opt -> method_definition','method_definition_opt',1,'p_method_definition_opt2','plyproto_parser.py',311),
  ('method_definition_opt -> method_definition_opt method_definition','method_definition_opt',2,'p_method_definition_opt2','plyproto_parser.py',312),
  ('service_definition -> SERVICE NAME LBRACE method_definition_opt RBRACE','service_definition',5,'p_service_definition','plyproto_parser.py',321),
  ('package_directive -> PACKAGE dotname SEMI','package_directive',3,'p_package_directive','plyproto_parser.py',327),
  ('import_directive -> IMPORT STRING_LITERAL SEMI','import_directive',3,'p_import_directive','plyproto_parser.py',333),
  ('option_rvalue -> NUM','option_rvalue',1,'p_option_rvalue','plyproto_parser.py',338),
  ('option_rvalue -> TRUE','option_rvalue',1,'p_option_rvalue','plyproto_parser.py',339),
  ('option_rvalue -> FALSE','option_rvalue',1,'p_option_rvalue','plyproto_parser.py',340),
  ('option_rvalue -> STRING_LITERAL','option_rvalue',1,'p_option_rvalue2','plyproto_parser.py',344),
  ('option_rvalue -> NAME','option_rvalue',1,'p_option_rvalue3','plyproto_parser.py',348),
  ('option_directive -> OPTION NAME EQ option_rvalue SEMI','option_directive',5,'p_option_directive','plyproto_parser.py',353),
  ('topLevel -> message_definition','topLevel',1,'p_topLevel','plyproto_parser.py',359),
  ('topLevel -> message_extension','topLevel',1,'p_topLevel','plyproto_parser.py',360),
  ('topLevel -> enum_definition','topLevel',1,'p_topLevel','plyproto_parser.py',361),
  ('topLevel -> service_definition','topLevel',1,'p_topLevel','plyproto_parser.py',362),
  ('topLevel -> import_directive','topLevel',1,'p_topLevel','plyproto_parser.py',363),
  ('topLevel -> option_directive','topLevel',1,'p_topLevel','plyproto_parser.py',364),
  ('package_definition -> package_directive','package_definition',1,'p_package_definition','plyproto_parser.py',368),
  ('package_definition -> empty','package_definition',1,'p_packages2','plyproto_parser.py',372),
  ('statements -> topLevel','statements',1,'p_statements2','plyproto_parser.py',376),
  ('statements -> statements topLevel','statements',2,'p_statements2','plyproto_parser.py',377),
  ('statements -> empty','statements',1,'p_statements','plyproto_parser.py',384),
  ('protofile -> package_definition statements','protofile',2,'p_protofile','plyproto_parser.py',389),
  ('goal -> STARTTOKEN protofile','goal',2,'p_goal','plyproto_parser.py',395),
]
